# name: Automatically generate and deploy Doxygen documentation

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Doxygen
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y doxygen graphviz
        
#         wget https://doxygen.nl/files/doxygen-1.9.7.linux.bin.tar.gz
#         tar -xzf doxygen-1.9.7.linux.bin.tar.gz
#         sudo mv doxygen-1.9.7/bin/doxygen /usr/local/bin/
#         doxygen --version
        
#         rm -rf doxygen-1.9.7
#         rm doxygen-1.9.7.linux.bin.tar.gz

#     - name: Generate Doxygen Documentation
#       run: |
#         doxygen Doxyfile

#     - name: Clone artemis-cosmos-teensy-fsw-docs repo
#       run: |
#         git config --global user.name "GitHub Action"
#         git config --global user.email "action@github.com"
#         git clone https://${{ secrets.PAT_TEENSY_FSW_DOCS }}@github.com/hsfl/artemis-cosmos-teensy-fsw-docs.git target-repo

#     - name: Clear local clone of artemis-cosmos-teensy-fsw-docs repo except readme.md
#       run: |
#         cd target-repo
#         # Find and delete all files except readme.md
#         find . -type f -not -name 'readme.md' -exec rm -f {} +
#         # Find and delete all directories except the current directory
#         find . -mindepth 1 -type d -exec rm -rf {} +
#         cd ..

#     - name: Copy images to artemis-cosmos-teensy-fsw-docs repo
#       run: |
#         mkdir -p target-repo/documentation
#         cp -r documentation/*.png target-repo/documentation/
    
#     - name: Copy generated Doxygen output to artemis-cosmos-teensy-fsw-docs repo
#       run: |
#         cp -r outputdirectory/html/* target-repo/
    
#     - name: Check for changes in generated documentation
#       id: changes
#       run: |
#         cd target-repo
#         git diff --exit-code || echo "::set-output name=has_changes::true"
    
#     - name: Get commit ID
#       id: commit_id
#       run: echo "::set-output name=commit_id::$(git rev-parse HEAD)"
#       if: steps.changes.outputs.has_changes == 'true'

#     - name: Push updated documentation to artemis-cosmos-teensy-fsw-docs
#       run: |
#         cd target-repo
#         git add .
#         git commit -m "Update Doxygen documentation based on artemis-cosmos-teensy-fsw commit ${{ steps.commit_id.outputs.commit_id }}"
#         git push origin main
#       if: steps.changes.outputs.has_changes == 'true'
#       env:
#         PAT: ${{ secrets.PAT_TEENSY_FSW_DOCS }}

#     - name: Cleanup
#       run: |
#         rm -rf target-repo
